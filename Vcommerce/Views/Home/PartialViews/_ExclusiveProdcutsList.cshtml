@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@using System.Drawing
@model ExclusiveProductsViewModel[];

@{

    foreach (var product in Model)
    {
        var image = string.Empty;
        if (string.IsNullOrEmpty(product.ImageUrl))
        {
            image = "assets/images/product_img1.jpg";
        }
        else { image = product.ImageUrl; }

<div class="col-lg-3 col-md-4 col-6">
    <div class="product">
        @{
                    if (@product.IsHot)
                    {
                        <span class="pr_flash bg-danger">Hot</span>
                    }
                    else if (@product.IsNew)
            {
                <span class="pr_flash">New</span>
                    }
                    else if (@product.IsOnSale)
                    {
                        <span class="pr_flash bg-success">Sale</span>
                    }
        }
        <div class="product_img">
            <a href="shop-product-detail.html">
                <img src="@image" alt="product_img1">
            </a>
            <div class="product_action_box">
                <ul class="list_none pr_action_btn">
                    <li class="add-to-cart"><a href="#"><i class="icon-basket-loaded"></i> Add To Cart</a></li>
                    <li><a href="shop-compare.html" class="popup-ajax"><i class="icon-shuffle"></i></a></li>
                    <li><a href="shop-quick-view.html" class="popup-ajax"><i class="icon-magnifier-add"></i></a></li>
                    <li><a href="#"><i class="icon-heart"></i></a></li>
                </ul>
            </div>
        </div>
        <div class="product_info">
                    <h6 class="product_title"><a asp-controller="Product" asp-action="ProductDetails" asp-route-productId="@product.Id" asp-route-category="@product.Category" , asp-route-gender="@product.Gender">@product.Name</a></h6>
            <div class="product_price">
                @{
                    if (product.IsOnSale)
                    {
                        <span class="price">
                            $
                            @{
                                        decimal? priceAfterSale = (product.Price - (product.Price * (product.SalesPercentage / 100)));
                                var finalPrice = Math.Round(priceAfterSale.Value, 2);
                            }
                            @finalPrice
                        </span>
                                <del>$@product.Price</del>
                        <div class="on_sale">
                                    <span>@product.SalesPercentage% Off</span>
                        </div>
                    }
                    else
                    {
                                <span class="price">$@product.Price</span>
                    }
                }
            </div>
            <div class="rating_wrap">
                <div class="rating">
                    <div class="product_rate" style="width:80%"></div>
                </div>
                <span class="rating_num">(21)</span>
            </div>
            <div class="pr_desc">
                <p>With each purchase we offer:</p>
            </div>
            <div class="pr_switch_wrap">
                <div class="product_color_switch">
                    @{
                                Color color = Color.FromName(@product.Color);
                    }
                    <span data-color="@ColorTranslator.ToHtml(color)"></span>
                </div>
            </div>
        </div>
    </div>
</div>
    }

}

